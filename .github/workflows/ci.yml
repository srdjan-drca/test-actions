name: CI Build + Unit Tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

env:
  Solution_Name: TestApp.sln

jobs:
  build:
    strategy:
      matrix:
        settings:
          [
            { configuration: Debug, publishReadyToRun: False },
            { configuration: Release, publishReadyToRun: True },
          ]

    runs-on:
      windows-latest
      # For a list of available runner types, refer to
      # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore dependencies
        run: dotnet restore -p:PublishReadyToRun=${{ matrix.settings.publishReadyToRun }}

      - name: Build solution
        run: dotnet build -maxcpucount -p:RestorePackagesConfig=false -p:Configuration=${{ matrix.settings.configuration }} -verbosity:normal

      - name: Cache workspace after build
        uses: actions/cache@v3.3.0
        with:
          path: ./
          key: ${{ runner.os }}-${{ matrix.settings.configuration }}-${{ github.event.repository.updated_at }}

  publish:
    runs-on: windows-latest

    needs: build

    steps:
      - name: Restore workspace from cache
        id: build-test
        uses: actions/cache@v3.3.0
        with:
          path: ./
          key: ${{ runner.os }}-Release-${{ github.event.repository.updated_at }}

      - name: Install gitversion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Determine application version
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.15

      - name: Decrypt certificate
        run: |
          echo "${{ secrets.WINDOWS_PFX_FILE }}" > cert.pfx.asc
          certutil -decode cert.pfx.asc cert.pfx

      - name: Add certificate to store
        run: certutil -user -q -p ${{ secrets.WINDOWS_PFX_PASSWORD }} -importpfx cert.pfx NoRoot

      - name: Publish solution
        run: >
          dotnet publish --no-build
          -p:Configuration=Release
          -p:PackageCertificateThumbprint="${{ secrets.WINDOWS_PFX_THUMBPRINT }}"
          -f:net7.0-windows10.0.19041.0
          -verbosity:normal

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: "dc-cloud-schema-manager-${{ steps.gitversion.outputs.fullSemVer }}"
          path: .\**\AppPackages\**\*.*
          retention-days: 10

  release:
    runs-on: windows-latest

    needs: [build, publish]

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

