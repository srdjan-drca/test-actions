name: Release

on:
  push:
    branches: ['main']

jobs:
  build:
    name: Release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9
        with:
          versionSpec: '5.1.x'

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9
        - run: |
            echo "Major: ${{ steps.gitversion.outputs.major }}"
            echo "Minor: ${{ steps.gitversion.outputs.minor }}"
            echo "Patch: ${{ steps.gitversion.outputs.patch }}"
            echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
            echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
            echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
            echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
            echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
            echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
            echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
            echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
            echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
            echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
            echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
            echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
            echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
            echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
            echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
            echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
            echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
            echo "Sha: ${{ steps.gitversion.outputs.sha }}"
            echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
            echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
            echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
            echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
            echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
            echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
            echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
            echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
            echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"